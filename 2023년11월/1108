// x만큼 간격이 있는 n개의 숫자
// 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.

import java.util.Arrays;
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("정수 x을 입력하세요.");
        int x = Integer.parseInt(sc.nextLine());

        System.out.println("자연수 n를 입력하세요.");
        int n = Integer.parseInt(sc.nextLine());
        
        long[] answer = solution(x,n);

        System.out.println("x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트는 : " + Arrays.toString(answer));
        sc.close();
    }

    public static long[] solution(int x, int n) {
        
        long[] answer = new long[n];
        answer[0] = x;
        int i = 1;
        
            while(i<n){
                answer[i]=answer[i-1]+x;  
                i++;
            }
        return answer;
    }
}



// 자연수 뒤집어 배열로 만들기
// 자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.

import java.util.Arrays;
import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("자연수 n를 입력하세요.");
        long n = Integer.parseInt(sc.nextLine());
        
        int[] answer = solution(n);

        System.out.println("자연수 n을 뒤집어 배열형태로 만든 리스트는 : " + Arrays.toString(answer));
        sc.close();
    }

    public static int[] solution(long n) {
        
        // 자릿수 구하기
        String a = ""+ n;

        int[] answer = new int[a.length()];

        for(int i=0; n>=1;i++){
            answer[i] = (int) (n%10);
            n/=10; 
        }

        return answer;
    }
}
